{"ast":null,"code":"var _jsxFileName = \"/home/sarahkimball/Units/ReactJS/LightsoutGame/react-lights-out/src/Board.js\",\n  _s = $RefreshSig$();\n// Board.js\nimport React, { useState } from \"react\";\nimport Cell from \"./Cell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = ({\n  boardSize\n}) => {\n  _s();\n  const [board, setBoard] = useState(() => {\n    // Initialize the board state with random lights on/off\n    const initialBoard = [];\n    for (let row = 0; row < boardSize; row++) {\n      const newRow = [];\n      for (let col = 0; col < boardSize; col++) {\n        newRow.push(Math.random() < 0.5);\n      }\n      initialBoard.push(newRow);\n    }\n    return initialBoard;\n  });\n  const toggleCell = (row, col) => {\n    setBoard(prevBoard => {\n      const newBoard = [...prevBoard];\n      // Toggle the clicked cell\n      newBoard[row][col] = !newBoard[row][col];\n\n      // Toggle adjacent cells\n      const directions = [[0, 1], [0, -1], [1, 0], [-1, 0]];\n      for (const [dx, dy] of directions) {\n        const newRow = row + dx;\n        const newCol = col + dy;\n        if (newRow >= 0 && newRow < boardSize && newCol >= 0 && newCol < boardSize) {\n          newBoard[newRow][newCol] = !newBoard[newRow][newCol];\n        }\n      }\n      return newBoard;\n    });\n  };\n  const isBoardEmpty = () => {\n    return board.every(row => row.every(cell => !cell));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Board\",\n    children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Board-row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {\n        isLit: cell,\n        onClick: () => toggleCell(rowIndex, colIndex)\n      }, `${rowIndex}-${colIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"aGD2lsU5ayO4iUjaDm0pI8Hzndc=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Cell","jsxDEV","_jsxDEV","Board","boardSize","_s","board","setBoard","initialBoard","row","newRow","col","push","Math","random","toggleCell","prevBoard","newBoard","directions","dx","dy","newCol","isBoardEmpty","every","cell","className","children","map","rowIndex","colIndex","isLit","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sarahkimball/Units/ReactJS/LightsoutGame/react-lights-out/src/Board.js"],"sourcesContent":["// Board.js\nimport React, { useState } from \"react\";\nimport Cell from \"./Cell\";\n\nconst Board = ({ boardSize }) => {\n  const [board, setBoard] = useState(() => {\n    // Initialize the board state with random lights on/off\n    const initialBoard = [];\n    for (let row = 0; row < boardSize; row++) {\n      const newRow = [];\n      for (let col = 0; col < boardSize; col++) {\n        newRow.push(Math.random() < 0.5);\n      }\n      initialBoard.push(newRow);\n    }\n    return initialBoard;\n  });\n\n  const toggleCell = (row, col) => {\n    setBoard((prevBoard) => {\n      const newBoard = [...prevBoard];\n      // Toggle the clicked cell\n      newBoard[row][col] = !newBoard[row][col];\n\n      // Toggle adjacent cells\n      const directions = [\n        [0, 1],\n        [0, -1],\n        [1, 0],\n        [-1, 0],\n      ];\n      for (const [dx, dy] of directions) {\n        const newRow = row + dx;\n        const newCol = col + dy;\n        if (newRow >= 0 && newRow < boardSize && newCol >= 0 && newCol < boardSize) {\n          newBoard[newRow][newCol] = !newBoard[newRow][newCol];\n        }\n      }\n\n      return newBoard;\n    });\n  };\n\n  const isBoardEmpty = () => {\n    return board.every((row) => row.every((cell) => !cell));\n  };\n\n  return (\n    <div className=\"Board\">\n      {board.map((row, rowIndex) => (\n        <div key={rowIndex} className=\"Board-row\">\n          {row.map((cell, colIndex) => (\n            <Cell\n              key={`${rowIndex}-${colIndex}`}\n              isLit={cell}\n              onClick={() => toggleCell(rowIndex, colIndex)}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}